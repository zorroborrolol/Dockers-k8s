name: Build and Push Docker Image to ECR

#on:
#  push:
#    branches:
#      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configure AWS credentials using repository secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Authenticate Docker to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 539039282224.dkr.ecr.us-east-1.amazonaws.com

      # Build Docker image
      - name: Build Docker Image
        run: docker build -t flask-web-app:latest .

      # Tag Docker image
      - name: Tag Docker Image
        run: docker tag flask-web-app:latest 539039282224.dkr.ecr.us-east-1.amazonaws.com/argocd-repo:latest

      # Push Docker image to Amazon ECR
      - name: Push to Amazon ECR
        run: docker push 539039282224.dkr.ecr.us-east-1.amazonaws.com/argocd-repo:latest

      # Set up kubectl for EKS
      - name: Set up kubectl for EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name Cluster-for-gitops
  
      # Verify kubectl connection to EKS
      - name: Verify kubectl connection
        run: |
          kubectl get nodes

      # Apply Kubernetes YAML files
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml 
          kubectl apply -f service.yaml 
